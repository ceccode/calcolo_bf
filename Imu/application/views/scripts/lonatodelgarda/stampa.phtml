<?
setlocale ( LC_MONETARY, 'it_IT' );
$title = "Documento: Verbale di contestazione";

$step1 = $this->values;
$riassunto_form_1 = $this->riassunto_step1_txt;
$anagrafe = $this->anagrafe;
$indici_macro_ambiti = $this->indici_mambiti_stampa;
$indici_sub_ambiti = $this->indici_u_sambiti_stampa;
$quote = $this->quote;
$data_calcolo = $this->data_calcolo;

require_once APPLICATION_PATH . '/../library/tcpdf/config/lang/ita.php';
require_once APPLICATION_PATH . '/../library/tcpdf/tcpdf.php';
require_once APPLICATION_PATH . '/models/Utility.php';
require_once APPLICATION_PATH . '/models/Elaborazione/stima.php';

$utility_handle = new Utility ();

/*
 * inseriamo nella session il nome del comune in modo da rendere il tutto
 * dinamico
 */
$comune = 'Lonato del Garda';

// data della creazione di questo documento
$timestamp = time ();
$today = mktime ( date ( "H", $timestamp ), date ( "i", $timestamp ), date ( "s", $timestamp ), date ( "m", $timestamp ), date ( "d", $timestamp ), date ( "Y", $timestamp ) );
$today = date ( "Y-m-d H:i:s", $today );
$data = $utility_handle->formattaDataOra ( $today );

/*
 * dati relativi all'anagrafe
 */
$nome = $anagrafe ['nome'];
$cognome = $anagrafe ['cognome'];
$cf = strtoupper ( $anagrafe ['cf'] );

/*
 * -------------------------------------------------------------------------
 * dati relativi al documento
 */

$id_dest_iden = "1a";

/*
 * dati riassuntivi - step1
 */
$macro_ambito = $riassunto_form_1 ["nome_macro_ambito"];
$sub_ambito = $riassunto_form_1 ["nome_sub_ambito"];
$zona = $riassunto_form_1 ["nome_zona"];
$area_urbanizzata = $riassunto_form_1 ["area_urbanizzata"];
$modalita_intervento = $riassunto_form_1 ["modalita_intervento"];
$lotto_saturo = $riassunto_form_1 ["lotto_saturo"];
$superficie_etichetta = $riassunto_form_1 ["superficie_etichetta"];
$superficie_territoriale = Utility::formattaNumeroPerStampa($riassunto_form_1 ["superficie"]);
$volumetria_etichetta = $riassunto_form_1 ["volumetria_etichetta"];
$volumetria = Utility::formattaNumeroPerStampa($riassunto_form_1 ["volumetria"]);
if ($volumetria_etichetta == ""){
	$volumetria = "";
}

/*
 * destinazioni ammesse
 */
$lonato_u_destammesse = Factory_dbTable::getClass ( "017092", "u_destammesse" );
$stmt5 = $lonato_u_destammesse->filtroDestinazioniAmmesse ( $step1 ['id_m_ambiti'], $data_calcolo );

/*
 * risultati del calcolo
 */
$capacita_edificatoria_calcolata = Utility::formattaNumeroPerStampa($this->capacita_edificatoria);
$valore_area_calcolata = Utility::formattaNumeroPerStampa($this->stimaUnitaria);

$valore_area_edificabile = Utility::formattaNumeroPerStampa($this->valoreAreaEdificabile);
//$valore_area_edificabile = number_format ($this->valoreAreaEdificabile, 0, ",", "." );

/*
 * unità di misura
 */
$u_capacita_edificatoria_calcolata = '';
$u_valore_area_calcolata = '';

$lonato_u_sambiti = Factory_dbTable::getClass ( "017092", "u_sambiti" );
$result = $lonato_u_sambiti->getVolumetria ( intval ( $step1 ['id_u_sambiti'] ), $data_calcolo );
$etichetta = $result [0]->indice_calcolo_capacita_edificatoria;

if (strtolower ( $etichetta ) == "v3") {
	
	$u_capacita_edificatoria_calcolata = 'm3';
	$u_valore_area_calcolata = 'Euro/m3';
} else {
	
	switch (strtolower ( $etichetta )) {
		
		case "v1" :
			$u_capacita_edificatoria_calcolata = 'm3';
			$u_valore_area_calcolata = 'Euro/m3';
			break;
		case "v2" :
			$u_capacita_edificatoria_calcolata = 'm3';
			$u_valore_area_calcolata = 'Euro/m3';
			break;
		case "v4" :
			$u_capacita_edificatoria_calcolata = 'm3';
			$u_valore_area_calcolata = 'Euro/m3';
			break;
		case "u1" :
			$u_capacita_edificatoria_calcolata = 'm2spl';
			$u_valore_area_calcolata = 'Euro/m2spl';
			break;
		case "u2" :
			$u_capacita_edificatoria_calcolata = 'm2spl';
			$u_valore_area_calcolata = 'Euro/m2spl';
			break;
		case "u4" :
			$u_capacita_edificatoria_calcolata = 'm2spl';
			$u_valore_area_calcolata = 'Euro/m2spl';
			break;
		default :
			$u_capacita_edificatoria_calcolata = 'm3';
			$u_valore_area_calcolata = 'Euro/m3';
	}
}

// -------------------------------------
/*
 * inidici macro ambiti
 */
$contributo_compensativo_aggiuntivo = Utility::formattaNumeroPerStampa($indici_macro_ambiti ["contributo_compensativo_aggiuntivo"]);
$valore_comprensativo_unitario = Utility::formattaNumeroPerStampa($indici_macro_ambiti ["valore_comprensativo_unitario"]);
$standard_pubblico_qualita = Utility::formattaNumeroPerStampa($indici_macro_ambiti ["standard_pubblico_qualita"]);

/*
 * indici subambiti Siccome sono dipendenti da n parameri sono nell'arrai
 * $indici_sub_ambiti ed è gestito nella stampa
 */

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//
// NON MODIFICARE DA QUI IN POI
//
//
// --------------------------------------------------------------------------

class MYPDF extends TCPDF {
	
	// Page footer
	public function Footer() {
		// Position at 15 mm from bottom
		$this->SetY ( - 20 );
		// Set font
		$this->SetFont ( 'helvetica', 'I', 11 );
		
		$tbl = <<<EOD
<hr style="background-color: #000;" />    
<table style="font-size: 25px;" class="left" width="100%" border="0" color="#000" cellspacing="0" cellpadding="2">
    <tr>
        <td>&copy; 2012 | documento creato con ... </td>
    </tr>
</table>
EOD;
		$this->writeHTML ( $tbl, true, false, false, false, '' );
		
		// Page number
		// $this->Cell(0, 10, 'Page
	// '.$this->getAliasNumPage().'/'.$this->getAliasNbPages(), 0, false, 'C',
	// 0, '', 0, false, 'T', 'M');
	}

}

$pdf = new MYPDF ( PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false );
// remove default header/footer
$pdf->setPrintHeader ( false );
// PDF_MARGIN_TOP
$pdf->SetFooterMargin ( 40 );
// set auto page breaks
$pdf->SetAutoPageBreak ( TRUE, PDF_MARGIN_BOTTOM );
// $pdf->SetAutoPageBreak(TRUE, 0);
// set border width
// $pdf->SetLineWidth(0.508);
// $pdf->setCellHeightRatio(1);
// set color for cell border
$pdf->SetDrawColor ( 0, 128, 255 );
// set image scale factor
$pdf->setImageScale ( PDF_IMAGE_SCALE_RATIO );
$pdf->AddPage ();
$pdf->SetFont ( 'helvetica', '', 8 );

$tbl = <<<EOD
<style>
*{
    font-size: 30px;
}
h1{
    font-size: 20px;
}

.small {
    font-size: 20px;
}
.no-marpad{
    margin: 0px;
    padding: 0px;    
}

.f-left{
    float: left;
}
.f-right{
    float: right;
}

.left {
    text-align: left;
    /*date e numero alto a sx e sotto il resto*/
}
.right{
    text-align: right;
}
.center{
    text-align: center;
}

.table-header{
    border: 1px solid black;
}
.table-content{
    border: 1px solid black;
}
.table-footer{
    border: 1px solid black;
}

.table-border{
	border: 1px solid black;
}
hr {
    color: #000;
    background-color: #DDEEFF;
}
</style>
EOD;

// testata
$tbl .= <<<EOD

<table class="no-marpad" color="#000" cellspacing="0">
    <tr>
        <td><span class="left">$nome $cognome</span></td>
        <td><span style="text-align: center;" class="left">$comune</span></td>
        <td><span class="right f-right">$data</span></td>
    </tr>
</table>
<span class="left">$cf</span>
<br /><hr/><br />
EOD;
$pdf->writeHTML ( $tbl, true, false, false, false, '' );

// riassunto dati
$tbl_riassunto = <<<EOD
<h3>Riassunto dei dati inseriti</h3>
<table style="font-size: 30px;">
    <tr>
        <td style="width:30%;">Macro ambito</td>
        <td style="width:70%;">$macro_ambito </td>        
    </tr>
     <tr>
        <td style="width:30%;">Sub ambito</td>
        <td style="width:70%;">$sub_ambito</td>        
    </tr>
    <tr>
        <td style="width:30%;">Zona</td>
        <td style="width:70%;">$zona</td>        
    </tr>
    <tr>
        <td style="width:30%;">Area urbanizzata</td>
        <td style="width:70%;">$area_urbanizzata</td>     
    </tr>
    <tr>
        <td style="width:30%;">Modalita intervento</td>
        <td style="width:70%;">$modalita_intervento</td>        
    </tr>  
    <tr>
        <td style="width:30%;">Lotto saturo</td>
        <td style="width:70%;">$lotto_saturo</td>        
    </tr>  
    <tr>
        <td style="width:30%;">$superficie_etichetta</td>
        <td style="width:70%;">$superficie_territoriale</td>        
    </tr>  
    <tr>
        <td style="width:30%;">$volumetria_etichetta</td>
        <td style="width:70%;">$volumetria</td>      
    </tr>      
</table>
EOD;
$pdf->writeHTML ( $tbl_riassunto, true, false, false, false, '' );

// destinazioni
$tbl_destinazioni = '
<style>
table {
border-top:    1px solid #ccc;
border-bottom: 1px solid #ccc;
border-left:   1px solid #ccc;
border-right:  1px solid #ccc;
}
</style>';
$tbl_destinazioni .= '<table  style="font-size: 30px;width:100%;">';
$tbl_destinazioni .= '<tr style="border-bottom: 1px solid #ccc;"><td style=" border-bottom: 1px solid #ccc;width:5%;">ID</td><td style="border-bottom: 1px solid #ccc; width:37%;">Destinazioni ammesse</td><td style="border-bottom: 1px solid #ccc; width:58%;">Quota di progetto inserita %</td></tr>';

foreach ( $stmt5 as $key => $value ) {
	// $label = $value->descrizione;
	// $id = $value->id_u_destammesse;
	//. "html_entity_decode ( $value->identificativo_sub_destinazione )"
	$id_dest_iden = $value->id_u_mdestinazioni.$value->identificativo_sub_destinazione;
	
	$descrizione = htmlspecialchars_decode ( html_entity_decode ( $value->descrizione ) );
	$quota_max_ammissibile = htmlspecialchars_decode ( html_entity_decode ( (100 * Stima::correggiFloat ( $value->quota_massima_ammissibile )) ) ); // messo
	                                                                                                                                       // in
	                                                                                                                                       // percentuale
	$quota_max = htmlspecialchars_decode ( html_entity_decode ( $value->soglia_dimensione_massima ) );
	$quota_per = htmlspecialchars_decode ( html_entity_decode ( 100 * Stima::correggiFloat ( $value->quota_percentuale ) ) );
	$quota_inserita = $quote [$key];
	
	$tbl_destinazioni .= '<tr>';
	$tbl_destinazioni .= '<td style="width:5%;">' . $id_dest_iden . '</td>';
	$tbl_destinazioni .= '<td style="width:37%;">' . $descrizione . '</td>';
	$tbl_destinazioni .= '<td style="width:58%;">' . $quota_inserita . '</td>';
	$tbl_destinazioni .= '</tr>';
}
$tbl_destinazioni .= '</table>';
$pdf->writeHTML ( $tbl_destinazioni, true, false, false, false, '' );

$tbl_risultati = <<<EOD
<h3>Indici relativi ai macro ambiti</h3>
<table style="font-size: 30px; width:70%;">
        <tr class="odd">
            <td style="width:60%;">Contributo compensativo aggiuntivo</td>
            <td style="width:15%;">$contributo_compensativo_aggiuntivo</td> 
            <td></td>
        </tr>
        <tr>
            <td style="width:60%;">Valore comprensativo unitario</td>
            <td style="width:15%;">$valore_comprensativo_unitario</td> 
            <td>Euro/m2</td>
        </tr>
        <tr class="odd">
            <td style="width:60%;">Standard pubblico qualit&agrave;</td>
            <td style="width:15%;">$standard_pubblico_qualita</td>
            <td>mqSlp</td>
        </tr>
</table>
EOD;
$pdf->writeHTML ( $tbl_risultati, true, false, false, false, '' );

// indici sub ambiti
// prendo i primi 6 indici
$testo1 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo1"] ) );
$dato1 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato1"] ) ));
$um1 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um1"] ) );

$testo2 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo2"] ) );
$dato2 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato2"] ) ));
$um2 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um2"] ) );

$testo3 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo3"] ) );
$dato3 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato3"] ) ));
$um3 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um3"] ) );

$testo4 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo4"] ) );
$dato4 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato4"] ) ));
$um4 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um4"] ) );

$testo5 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo5"] ) );
$dato5 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato5"] ) ));
$um5 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um5"] ) );

$testo6 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo6"] ) );
$dato6 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato6"] ) ));
$um6 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um6"] ) );

if (count ( $indici_sub_ambiti ) == 21) {
	// se ho lunghezza 7 prendo anche il settimo
	$testo7 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["testo7"] ) );
	$dato7 = Utility::formattaNumeroPerStampa(htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["dato7"] ) ));
	$um7 = htmlspecialchars_decode ( html_entity_decode ( $indici_sub_ambiti ["um7"] ) );
	
	// memorizzo la stringa da stampare in html4
	$tbl_indici = <<<EOD
<h3>Indici relativi ai subambiti</h3>
<table style="font-size: 30px; width:70%;">
        <tr class="odd">
            <td style="width:60%;">$testo1</td>
            <td style="width:15%;">$dato1</td>
            <td>$um1</td>            
        </tr>
        <tr class="">
            <td style="width:60%;">$testo2</td>
            <td style="width:15%;">$dato2</td> 
            <td>$um2</td>
        </tr>        
        <tr class="odd">
            <td style="width:60%;">$testo3</td>
            <td style="width:15%;">$dato3</td> 
            <td>$um3</td>
        </tr>
        <tr>
            <td style="width:60%;">$testo4</td>
            <td style="width:15%;">$dato4</td> 
            <td>$um4</td>
        </tr>    
        <tr class="odd">
            <td style="width:60%;">$testo5</td>
            <td style="width:15%;">$dato5</td>
            <td>$um5</td>
        </tr>
        <tr>
            <td style="width:60%;">$testo6</td>
            <td style="width:15%;">$dato6</td> 
            <td>$um6</td>
        </tr>
        <tr class="odd">
            <td style="width:60%;">$testo7</td>
            <td style="width:15%;">$dato7</td> 
            <td>$um7</td>
        </tr>    
    </table>
EOD;
} else {
	// memorizzo la stringa da stampare in html4
	$tbl_indici = <<<EOD
<h3>Indici relativi ai subambiti</h3>
<table style="font-size: 30px; width:70%;">
        <tr class="odd">
            <td style="width:60%;">$testo1</td>
            <td style="width:15%;">$dato1</td>
            <td >$um1</td>            
        </tr>
        <tr class="">
            <td style="width:60%;">$testo2</td>
            <td style="width:15%;">$dato2</td> 
            <td>$um2</td>
        </tr>        
        <tr class="odd">
            <td style="width:60%;">$testo3</td>
            <td style="width:15%;">$dato3</td> 
            <td>$um3</td>
        </tr>
        <tr>
            <td style="width:60%;">$testo4</td>
            <td style="width:15%;">$dato4</td> 
            <td>$um4</td>
        </tr>    
        <tr class="odd">
            <td style="width:60%;">$testo5</td>
            <td style="width:15%;">$dato5</td>
            <td>$um5</td>
        </tr>
        <tr>
            <td style="width:60%;">$testo6</td>
            <td style="width:15%;">$dato6</td> 
            <td>$um6</td>
        </tr>   
    </table>
EOD;
}
// $pdf->writeHTML($tbl_indici, true, false, false, '');
$pdf->writeHTML ( $tbl_indici, true, false, false, '' );

// risultati
/*background-color: #77CCFF;*/
$tbl_risultati = <<<EOD
<h3>Valori stimati</h3>
<table style="background-color: #DDEEFF; font-size: 30px; border: 1px solid #ccc;">
        <tr class="odd">
            <td style="width:42%;">Capacità edificatoria calcolata</td>
            <td style="width:16%;"><b>$capacita_edificatoria_calcolata</b></td> 
            <td style="width:14%;">$u_capacita_edificatoria_calcolata</td>
            <td style="width:28%;"></td>
        </tr>
        <tr>
            <td style="width:42%;">Valore area calcolata</td>
            <td style="width:16%;"><b>$valore_area_calcolata</b></td> 
            <td style="width:14%;">$u_valore_area_calcolata</td>
            <td style="width:28%;"></td>
        </tr>
        <tr class="odd">
            <td style="width:42%;">Valore area edificabile</td>
            <td style="width:16%;"><b>$valore_area_edificabile</b></td>
            <td style="width:14%;">Euro</td>
            <td style="width:28%;"></td>
        </tr>
</table>
EOD;
$pdf->writeHTML ( $tbl_risultati, true, false, false, false, '' );

ob_clean ();
$pdf->Output ( 'VAE_' . $comune . '_' . $cf . '.pdf', 'I' );
?>